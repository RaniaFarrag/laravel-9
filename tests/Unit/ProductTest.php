<?php

namespace Tests\Unit;

use PHPUnit\Framework\TestCase;

class ProductTest extends \Tests\TestCase
{
    public $product;
    public $productService;
    /**
     * A basic unit test example.
     *
     * @return void
     */

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->productService = $this->app->make('App\Services\ProductService');
        $this->product = [
            'title' => 'testUnit',
            'description' => 'test des',
            'user_id' => '1',
            'size' => '12',
            'color' => 'green',
        ];
    }

    public function test_get_all_products()
    {
        $allProductsCount = $this->productService->getAllProducts()->count();

        return $this->assertEquals(0, $allProductsCount);

    }

    public function test_create_product()
    {
        $createdProduct = $this->productService->createProduct($this->product);
        return $this->assertDatabaseHas('products', ['title' => 'testUnit']);
    }

    public function test_update_product()
    {
        $createdProduct = $this->productService->createProduct($this->product);

        $product = [
            'title' => 'test by unit',
            'description' => 'test des',
            'user_id' => '1',
            'size' => '12',
            'color' => 'red',
            'price' => 10,
        ];

        $this->productService->updateProduct($product, $createdProduct);

        return $this->assertDatabaseHas('product_details', ['price' => 10]);
    }

    public function test_delete_product()
    {
        $createdProduct = $this->productService->createProduct($this->product);
        $this->productService->deleteProduct($createdProduct);

        return $this->assertDatabaseMissing('products', ['id' => $createdProduct->id]);

    }
}
