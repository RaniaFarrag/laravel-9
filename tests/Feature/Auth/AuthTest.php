<?php

namespace Tests\Feature\Auth;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class AuthTest extends TestCase
{
    /**
     * A basic feature test example.
     *
     * @return void
     */

    public $user;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->user = [
            'name' => 'rania',
            'email' => 'rania@test.com',
            'password' => 12345678,
            'password_confirmation' => 12345678,
        ];
    }

    public function test_registeration_validation()
    {
        $testUser = [
            'name' => 'rania',
            'email' => 'rania@test.com',
            'password' => 12345678,
            'password_confirmation' => 123,
        ];
        $response = $this->withHeaders(['Accept' => 'application/json'])->post('api/register', $testUser);
        $response->assertStatus(422);
    }

    public function test_registeration()
    {
        $response = $this->withHeaders(['Accept' => 'application/json'])->post('api/register', $this->user);
        $response->assertStatus(200);
    }

    public function test_login_with_wrong_pass()
    {
        $user = [
            'email' => 'rania@test.com',
            'password' => 1256,
        ];
        $respone = $this->withHeaders(['Accept' => 'application/json'])->post('api/login', $user);
        $respone->assertStatus(422);

    }

    public function test_login_with_correct_data()
    {
        $user = [
            'email' => 'rania@test.com',
            'password' => 12345678,
        ];
        $respone = $this->withHeaders(['Accept' => 'application/json'])->post('api/login', $user);
        $respone->assertStatus(200);

    }
}
